{"id":"index.html","dependencies":[{"name":"./src\\css\\style.css","dynamic":true,"resolved":"C:\\Users\\User\\Desktop\\grades\\src\\css\\style.css","parent":"C:\\Users\\User\\Desktop\\grades\\index.html"},{"name":"./src\\js\\index.js","dynamic":true,"resolved":"C:\\Users\\User\\Desktop\\grades\\src\\js\\index.js","parent":"C:\\Users\\User\\Desktop\\grades\\index.html"}],"generated":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset=\"UTF-8\">\n    <link rel=\"stylesheet\" href=\"/df3a09ffcba83a8d0209ba07967ba849.css\">\n  </head>\n\n  <body>\n    <nav class=\"navbar\">\n      <h1 class=\"nav-brand\">Classroom</h1>\n    </nav>\n\n    <main class=\"container\">\n      <form id=\"grades-form\">\n        <label class=\"label\" for=\"component-name\">Enter grade</label>\n        <input title=\"Допустимы только числа\" autocomplete=\"off\" type=\"number\" min=\"0\" max=\"20\" class=\"input\" required=\"\" placeholder=\"Grade (0 and 20)\" id=\"your-grade\">\n\n        <input id=\"btn\" type=\"submit\" class=\"btn btn-accent\" value=\"Add\">\n      </form>\n\n      <table border=\"1\" id=\"stats-table\" class=\"table table-center\">\n        <thead>\n          <tr>\n            <th width=\"25%\">Number of tests taken</th>\n            <th width=\"25%\">First submitted grade</th>\n            <th width=\"25%\">Last submitted grade</th>\n            <th width=\"25%\">Average grade</th>\n          </tr>\n        </thead>\n        <tbody>\n          <!-- Отрисовка элементов здесь  -->\n        </tbody>\n      </table>\n\n      <ul class=\"grades-list\">\n        <!-- Отрисовка истории оценок здесь  -->\n      </ul>\n\n      <!-- <div class=\"notification\"></div> -->\n    </main>\n    <script type=\"module\" src=\"/99a85c3932c0670278158f38d818e0ef.js\"></script>\n\n    <!-- <script>\n      /*\n       * @param {array} grades\n       */\n      function getNumberOfGrades(grades) {\n        return grades.length;\n      }\n\n      /*\n       * @param {array} grades\n       */\n      function getFirstGrade(grades) {\n        return grades[0];\n      }\n\n      /*\n       * @param {array} grades\n       */\n      function getLastGrade(grades) {\n        return grades.at(-1);\n      }\n\n      function getAverageGrade(grades) {\n        let sum = 0;\n\n        grades.forEach((grade) => {\n          sum += grade;\n        });\n\n        const average = sum / grades?.length || 0;\n\n        return average;\n      }\n\n      // элемент формы\n      const gradesForm = document.querySelector(\"#grades-form\");\n\n      // элемент ввода\n      const yourGrade = document.querySelector(\"#your-grade\");\n      // содержимое таблицы\n      const tbody = document.querySelector(\"#stats-table tbody\");\n\n      // история оценок\n      const gradesList = document.querySelector(\".grades-list\");\n\n      // массив оценок\n      const grades = [1, 2, 3, 4, 5];\n\n      /**\n       *\n       * @param {array} grades - массив оценок\n       */\n      function render(grades) {\n        tbody.innerHTML = `<tr>\n  <td>${getNumberOfGrades(grades) ?? \"0\"}</td>\n  <td>${getFirstGrade(grades) ?? \"0\"}</td>\n  <td>${getLastGrade(grades) ?? \"0\"}</td>\n  <td>${getAverageGrade(grades)}</td>\n  </tr>`;\n\n        showAndUpdateGradesHistory(grades); // показ истории оценок\n      }\n\n      gradesForm.addEventListener(\"submit\", (event) => {\n        event.preventDefault();\n\n        const newGrade = Number.parseInt(yourGrade.value, 10);\n\n        grades.push(newGrade);\n\n        showNotification(\"Новая оценка добавлена!\");\n\n        yourGrade.value = \"\";\n\n        render(grades);\n      });\n\n      /**\n       *\n       * @param {string} message - текстовое сообщение\n       */\n      function showNotification(message) {\n        const element = document.createElement(\"div\");\n\n        element.classList.add(\"notification\", \"is-show\");\n\n        element.innerHTML = message;\n\n        document.body.appendChild(element);\n        // document.body.insertAdjacentHTML(\"beforeend\", element);\n\n        setTimeout(() => {\n          element.classList.remove(\"is-show\");\n        }, 2000);\n      }\n\n      function showAndUpdateGradesHistory(grades) {\n        gradesList.innerHTML = \"\";\n\n        grades.forEach(function (grade, index) {\n          const listItemHTML = `\n      <li class=\"grade\" data-grade=\"${index}\">\n        ${grade}\n        <button onclick=\"onEditHandler()\" class=\"btn-edit\">Edit</button>\n        <button onclick=\"onDeleteHandler()\" class=\"btn-edit\">Cancel</button>\n      </li>\n    `;\n\n          gradesList.insertAdjacentHTML(\"beforeend\", listItemHTML);\n        });\n      }\n\n      // Остальная верстка \n\n      function onEditHandler() {\n        console.log(\"hello1\");\n      }\n\n      function onDeleteHandler() {\n        console.log(\"hello2\");\n      }\n\n      // При использовании type=\"module\" в теге <script>, функции, объявленные внутри модуля,\n      // не добавляются автоматически к глобальному объекту window. Из-за этого использование этих функций в атрибутах onclick\n      // в HTML может вызвать ошибку Uncaught ReferenceError, так как функции не доступны в глобальной области видимости.\n      // document.onEditHandler = function () {\n      //   console.log(\"hello1\");\n      // };\n\n      // document.onDeleteHandler = function () {\n      //   console.log(\"hello2\");\n      // };\n\n      render(grades); // первичная отрисовка\n    </script> -->\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"7101fc30270c23dc1482ded62fe1af05","cacheData":{}}